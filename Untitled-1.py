#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import logging
import os
from datetime import datetime

import pandas as pd
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters.state import StateFilter
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command

# ========== === –ù–ê–°–¢–†–û–ô–ö–ò (—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Ç—É—Ç) === ==========
API_TOKEN = "8431308016:AAEvKejj9VzGe7mesnv5bBhlzGmRhqs0dwY"  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
ADMIN_CHAT_ID = -1003244858296  # ID –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Ç–≤–æ–π Telegram ID

WELCOME_TEXT = """
üíÇ‚Äç‚ôÇÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
–≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –Ω–∞–±–æ—Ä–∞ –Ω–∞ –≤–æ–µ–Ω–Ω—É—é —Å–ª—É–∂–±—É –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É.

üìã –ú—ã –ø–æ–º–æ–∂–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ä–µ–≥–∏–æ–Ω –∏ –≤–∞–∫–∞–Ω—Å–∏—é, –∞ —Ç–∞–∫–∂–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞.

–ü—Ä–∏–º–µ—Ä—ã –≤–∞–∫–∞–Ω—Å–∏–π:
 ‚Ä¢ –°—Ç—Ä–µ–ª–æ–∫-–ø—É–ª–µ–º—ë—Ç—á–∏–∫
 ‚Ä¢ –í–æ–¥–∏—Ç–µ–ª—å –ë–¢–†
 ‚Ä¢ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
 ‚Ä¢ –°–≤—è–∑–∏—Å—Ç

ü™ñ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è —Å –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ–º –æ–±–æ—Ä–æ–Ω—ã –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏. (–°–ª—É–∂–±–∞ –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –û–±–æ—Ä–æ–Ω—ã –†–§ –Ω–∞–±–æ—Ä –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤–æ–µ–Ω–∫–æ–º–∞—Ç–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –£–∫–∞–∑–∞ –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –†–§ ‚Ññ915 –æ—Ç 01.12.2023.)

‚öñÔ∏è –ü—Ä–∞–≤–æ–≤—ã–µ –æ—Å–Ω–æ–≤–∞–Ω–∏—è:
 ‚Ä¢ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç–∞—Ç—å—ë–π 34 –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ ‚Ññ 53-–§–ó –æ—Ç 28.03.1998 –≥. ¬´–û –≤–æ–∏–Ω—Å–∫–æ–π –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±–µ¬ª.

 ‚Ä¢ –í—ã–ø–ª–∞—Ç—ã –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ —Ä–µ–≥—É–ª–∏—Ä—É—é—Ç—Å—è –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º ‚Ññ 306-–§–ó –æ—Ç 07.11.2011 –≥. ¬´–û –¥–µ–Ω–µ–∂–Ω–æ–º –¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –∏–º –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç¬ª.

‚û°Ô∏è –ù–∞–∂–º–∏—Ç–µ ¬´üìã –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É¬ª, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Å–ª—É–∂–±–µ –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É
"""

REGIONS = [
    "–ú–æ—Å–∫–≤–∞ ‚Äî –≥. –ú–æ—Å–∫–≤–∞ –ø–æ —É—Å–ª–æ–≤–∏—è–º 2,3–º–ª–Ω —Ä—É–±–ª–µ–π –≤—ã–ø–ª–∞—Ç–∞, 290—Ç—ã—Å —Ä—É–± –∑–∞—Ä–ø–ª–∞—Ç–∞ + 50—Ç—ã—Å —Ä—É–± —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–¥–±–∞–≤–∫–∞, —Å–ø–∏—Å–∞–Ω–∏–µ –î–æ–ª–≥–æ–≤ –¥–æ 10–º–ª–Ω, –º–µ—Å—Ç–∞ –¥–µ—Ç—è–º –∞ –¥–µ—Ç—Å–∫–∏–µ —Å–∞–¥—ã/—à–∫–æ–ª—ã, –ø—Ä–∏ –ø—Ä–æ–µ–∑–¥–µ –∏–∑ –¥—Ä—É–≥–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è –í–í–ö –∏ –ø—Ä–æ–µ–∑–¥ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è\n\n",
    "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å ‚Äî –ø–æ —É—Å–ª–æ–≤–∏—è–º 3–º–ª–Ω —Ä—É–±–ª–µ–π –≤—ã–ø–ª–∞—Ç–∞, 290—Ç—ã—Å —Ä—É–± –∑–∞—Ä–ø–ª–∞—Ç–∞ + 20—Ç—ã—Å —Ä—É–± –Ω–∞–¥–±–∞–≤–∫–∞ –∑–∞ –¥–µ—Ç–µ–π, —Å–ø–∏—Å–∞–Ω–∏–µ –î–æ–ª–≥–æ–≤ –¥–æ 10–º–ª–Ω, –º–µ—Å—Ç–∞ –¥–µ—Ç—è–º, –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–µ–∑–¥ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è\n\n",
    "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å ‚Äî —É—Å–ª–æ–≤–∏—è: 2,4–º–ª–Ω —Ä—É–±–ª–µ–π –≤—ã–ø–ª–∞—Ç–∞, 290—Ç—ã—Å —Ä—É–± –∑–∞—Ä–ø–ª–∞—Ç–∞ + 20—Ç—ã—Å —Ä—É–± –Ω–∞–¥–±–∞–≤–∫–∞ –∑–∞ —Ä–µ–±—ë–Ω–∫–∞, —Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–≥–æ–≤, –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–µ–∑–¥ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è\n\n",
    "–†—è–∑–∞–Ω—å ‚Äî —É—Å–ª–æ–≤–∏—è: 1,5–º–ª–Ω —Ä—É–±–ª–µ–π –≤—ã–ø–ª–∞—Ç–∞, 290—Ç—ã—Å —Ä—É–± –∑–∞—Ä–ø–ª–∞—Ç–∞ + 20—Ç—ã—Å —Ä—É–± –Ω–∞–¥–±–∞–≤–∫–∞, —Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–≥–æ–≤, –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–µ–∑–¥ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è\n\n",
    "–í–æ–ª–æ–≥–¥–∞ ‚Äî —É—Å–ª–æ–≤–∏—è: 1,2–º–ª–Ω —Ä—É–±–ª–µ–π –≤—ã–ø–ª–∞—Ç–∞, 290—Ç—ã—Å —Ä—É–± –∑–∞—Ä–ø–ª–∞—Ç–∞ + 20—Ç—ã—Å —Ä—É–± –Ω–∞–¥–±–∞–≤–∫–∞, —Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–≥–æ–≤, –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–µ–∑–¥ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è\n\n",
    "–°–º–æ–ª–µ–Ω—Å–∫ ‚Äî —É—Å–ª–æ–≤–∏—è: 1,2–º–ª–Ω —Ä—É–±–ª–µ–π –≤—ã–ø–ª–∞—Ç–∞, 290—Ç—ã—Å —Ä—É–± –∑–∞—Ä–ø–ª–∞—Ç–∞ + 20—Ç—ã—Å —Ä—É–± –Ω–∞–¥–±–∞–≤–∫–∞, —Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–≥–æ–≤, –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–µ–∑–¥ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è\n\n",
]

VACANCIES_EXAMPLES = [
    "–°—Ç—Ä–µ–ª–æ–∫-–ø—É–ª–µ–º—ë—Ç—á–∏–∫",
    "–í–æ–¥–∏—Ç–µ–ª—å –ë–¢–† –∏ –¥—Ä. –≤–æ–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–°–≤—è–∑–∏—Å—Ç (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–°—Ç—Ä–µ–ª–æ–∫",
    "–í–æ–¥–∏—Ç–µ–ª—å –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –≥—Ä—É–∑–æ–≤ (B,C)",
    "–û—Ö—Ä–∞–Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤",
    "–†–µ–º–ë–∞—Ç (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–ë–ø–ª–∞ (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–°–≤–∞—Ä—â–∏–∫ (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–¢–µ—Ö–Ω–∏–∫ (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–î–µ–∑–µ–ª–∏—Å—Ç (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
    "–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ (–Ω–∞–±–æ—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –í–£–°)",
]

DATA_DIR = "data"
CSV_FILE = os.path.join(DATA_DIR, "submissions.csv")
XLSX_FILE = os.path.join(DATA_DIR, "submissions.xlsx")
# ========== === /–ù–ê–°–¢–†–û–ô–ö–ò === ==========

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
os.makedirs(DATA_DIR, exist_ok=True)

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìã –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"), KeyboardButton(text="üìç –£—Å–ª–æ–≤–∏—è –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º")],
        [KeyboardButton(text="‚ÑπÔ∏è –û—Ç–Ω–æ—à–µ–Ω–∏–µ / –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"), KeyboardButton(text="üìÇ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏")]
    ],
    resize_keyboard=True
)

# FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è
class Form(StatesGroup):
    fio = State()
    phone = State()
    health = State()
    service = State()
    age = State()
    rights = State()
    education = State()
    experience = State()
    position = State()

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫–∏
def save_submission_to_files(submission: dict):
    df_new = pd.DataFrame([submission])
    if not os.path.exists(CSV_FILE):
        df_new.to_csv(CSV_FILE, index=False, encoding="utf-8-sig")
    else:
        df_existing = pd.read_csv(CSV_FILE, encoding="utf-8-sig")
        df_total = pd.concat([df_existing, df_new], ignore_index=True)
        df_total.to_csv(CSV_FILE, index=False, encoding="utf-8-sig")
    try:
        df_total = pd.read_csv(CSV_FILE, encoding="utf-8-sig")
        df_total.to_excel(XLSX_FILE, index=False)
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ XLSX: %s", e)

# ================== –•—ç–Ω–¥–ª–µ—Ä—ã ==================
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(WELCOME_TEXT, reply_markup=main_menu)

@dp.message(lambda m: m.text == "üìç –£—Å–ª–æ–≤–∏—è –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º")
async def show_regions(message: types.Message):
    text = "üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã –∏ —É—Å–ª–æ–≤–∏—è:\n\n" + "\n".join(f"‚Ä¢ {r}" for r in REGIONS)
    await message.answer(text)

@dp.message(lambda m: m.text == "‚ÑπÔ∏è –û—Ç–Ω–æ—à–µ–Ω–∏–µ / –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def info_relation(message: types.Message):
    text = (
        "üìÑ –ú—ã –æ—Ñ–æ—Ä–º–ª—è–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏–µ, –ø–æ–º–æ–≥–∞–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é –∏ —Ä–µ–≥–∏–æ–Ω, "
        "–∞ —Ç–∞–∫–∂–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.\n\n"
        "–ï—Å–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫ –Ω–∞–º —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –±–æ—Ç ‚Äî –º—ã –ø–æ–¥–±–µ—Ä—ë–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –≤–∞–∫–∞–Ω—Å–∏—é –∏ —Ä–µ–≥–∏–æ–Ω.\n\n"
        "–û—Ç–Ω–æ—à–µ–Ω–∏–µ (—Ö–æ–¥–∞—Ç–∞–π—Å—Ç–≤–æ) –≤ –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±–µ ‚Äî —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞—ë—Ç –∫–æ–º–∞–Ω–¥–∏—Ä –≤–æ–∏–Ω—Å–∫–æ–π —á–∞—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –Ω–∞ –≤–æ–µ–Ω–Ω—É—é —Å–ª—É–∂–±—É –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ –≤ —ç—Ç—É —á–∞—Å—Ç—å"
    )
    await message.answer(text)

@dp.message(lambda m: m.text == "üìÇ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏")
async def show_vacancies(message: types.Message):
    text = "üìå –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:\n\n" + "\n".join(f"‚Ä¢ {v}" for v in VACANCIES_EXAMPLES)
    await message.answer(text)

@dp.message(lambda m: m.text == "üìã –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É")
async def start_survey(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ):")
    await state.set_state(Form.fio)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
@dp.message(StateFilter(Form.fio))
async def process_fio(message: types.Message, state: FSMContext):
    await state.update_data(fio=message.text.strip())
    await message.answer("–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:")
    await state.set_state(Form.phone)

@dp.message(StateFilter(Form.phone))
async def process_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text.strip())
    await message.answer("–ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º? –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ '–ù–µ—Ç'.")
    await state.set_state(Form.health)

@dp.message(StateFilter(Form.health))
async def process_health(message: types.Message, state: FSMContext):
    await state.update_data(health=message.text.strip())
    await message.answer("–ë—ã–ª–∏ –ª–∏ –≤—ã —Ä–∞–Ω–µ–µ –Ω–∞ –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±–µ –∏–ª–∏ –≤ –°–í–û? (–ï—Å–ª–∏ –¥–∞ ‚Äî —É–∫–∞–∂–∏—Ç–µ –í–£–° –∏ –æ–ø—ã—Ç, –∏–Ω–∞—á–µ '–ù–µ—Ç')")
    await state.set_state(Form.service)

@dp.message(StateFilter(Form.service))
async def process_service(message: types.Message, state: FSMContext):
    await state.update_data(service=message.text.strip())
    await message.answer("–í–æ–∑—Ä–∞—Å—Ç (—Ü–∏—Ñ—Ä–∞–º–∏):")
    await state.set_state(Form.age)

@dp.message(StateFilter(Form.age))
async def process_age(message: types.Message, state: FSMContext):
    await state.update_data(age=message.text.strip())
    await message.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: B, C; –∏–ª–∏ '–ù–µ—Ç'):")
    await state.set_state(Form.rights)

@dp.message(StateFilter(Form.rights))
async def process_rights(message: types.Message, state: FSMContext):
    await state.update_data(rights=message.text.strip())
    await message.answer("–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ / —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:")
    await state.set_state(Form.education)

@dp.message(StateFilter(Form.education))
async def process_education(message: types.Message, state: FSMContext):
    await state.update_data(education=message.text.strip())
    await message.answer("–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç / –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å):")
    await state.set_state(Form.experience)

@dp.message(StateFilter(Form.experience))
async def process_experience(message: types.Message, state: FSMContext):
    await state.update_data(experience=message.text.strip())
    await message.answer("–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è, –∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–∞—Å—Ç—å:")
    await state.set_state(Form.position)

@dp.message(StateFilter(Form.position))
async def process_position(message: types.Message, state: FSMContext):
    await state.update_data(position=message.text.strip())
    data = await state.get_data()

    submission = {
        "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "fio": data.get("fio", ""),
        "phone": data.get("phone", ""),
        "health": data.get("health", ""),
        "service": data.get("service", ""),
        "age": data.get("age", ""),
        "rights": data.get("rights", ""),
        "education": data.get("education", ""),
        "experience": data.get("experience", ""),
        "position": data.get("position", ""),
    }

    try:
        save_submission_to_files(submission)
    except Exception as e:
        logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É –≤ —Ñ–∞–π–ª: %s", e)

    admin_text = (
        "üìã <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\n\n"
        f"üë§ <b>–§–ò–û:</b> {submission['fio']}\n"
        f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {submission['phone']}\n"
        f"üíä <b>–ó–¥–æ—Ä–æ–≤—å–µ:</b> {submission['health']}\n"
        f"üéñÔ∏è <b>–°–ª—É–∂–±–∞/–°–í–û:</b> {submission['service']}\n"
        f"üéÇ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {submission['age']}\n"
        f"üöó <b>–ü—Ä–∞–≤–∞:</b> {submission['rights']}\n"
        f"üéì <b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {submission['education']}\n"
        f"üíº <b>–û–ø—ã—Ç:</b> {submission['experience']}\n"
        f"üìå <b>–ñ–µ–ª–∞–µ–º–∞—è –≤–∞–∫–∞–Ω—Å–∏—è:</b> {submission['position']}\n"
        f"üïí <b>–í—Ä–µ–º—è:</b> {submission['timestamp']}\n"
    )

    try:
        await bot.send_message(ADMIN_CHAT_ID, admin_text, parse_mode="HTML")
    except Exception as e:
        logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É: %s", e)

    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.", reply_markup=main_menu)
    await state.clear()

@dp.message()
async def default_handler(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –≤ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.", reply_markup=main_menu)

if __name__ == "__main__":
    import asyncio
    logger.info("Bot started")

    asyncio.run(dp.start_polling(bot))

@dp.message(Command("admin"))
async def admin_command(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–æ–º
    if message.from_user.id != ADMIN_CHAT_ID:
        await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞–º.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª —Å –∑–∞—è–≤–∫–∞–º–∏
    csv_exists = os.path.exists(CSV_FILE)
    xlsx_exists = os.path.exists(XLSX_FILE)

    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ (–∑–∞—è–≤–æ–∫)
    submissions_count = 0
    last_time = "‚Äî"
    if csv_exists:
        try:
            df = pd.read_csv(CSV_FILE)
            submissions_count = len(df)
            if submissions_count > 0 and "timestamp" in df.columns:
                last_time = df["timestamp"].iloc[-1]
        except Exception as e:
            logger.exception("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è CSV: %s", e)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    text = (
        "‚öôÔ∏è <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n"
        f"üìä –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: <b>{submissions_count}</b>\n"
        f"üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞: <b>{last_time}</b>\n"
        f"üìÇ CSV —Ñ–∞–π–ª: <code>{CSV_FILE}</code>\n"
        f"üìò Excel —Ñ–∞–π–ª: <code>{XLSX_FILE}</code>\n"
    )

    await message.answer(text, parse_mode="HTML")

    # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º Excel-—Ñ–∞–π–ª, –µ—Å–ª–∏ –µ—Å—Ç—å
    if xlsx_exists:
        try:
            file = types.FSInputFile(XLSX_FILE)
            await bot.send_document(ADMIN_CHAT_ID, file, caption="üìé –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏ (Excel)")
        except Exception as e:
            logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Excel —Ñ–∞–π–ª: %s", e)


